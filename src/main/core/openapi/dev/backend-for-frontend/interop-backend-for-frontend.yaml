openapi: 3.0.3
info:
  title: Backend for Frontend Micro Service
  description: Interop BFF implementation
  version: '{{version}}'
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: '/backend-for-frontend/{{version}}'
    description: This service is the Interop BFF
security:
  - bearerAuth: []
tags:
  - name: authorization
    description: Implements authorization
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: selfcare
    description: Selfcare Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: attributes
    description: Attribute Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: agreements
    description: Attribute Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: eservices
    description: EService Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: purposes
    description: Purpose Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: tenants
    description: Tenant Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: tools
    description: Utility Module
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: support
    description: Support
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'    
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  '/agreements':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - agreements
      summary: retrieves a list of agreements
      description: retrieves a list of agreements
      operationId: getAgreements
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
        - in: query
          name: eservicesIds
          description: comma separated sequence of eservices IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: consumersIds
          description: comma separated sequence of consumers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of agreement states to filter the response with
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgreementState'
            default: []
          explode: false
        - in: query
          name: showOnlyUpgradeable
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Agreements found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreements'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    post:
      summary: Agreement Creation
      operationId: createAgreement
      responses:
        '200':
          description: Agreement created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      tags:
        - agreements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementPayload'
        description: payload for agreement creation
        required: true
      description: creates the agreement between the involved parties.
  '/agreements/filter/producers':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - agreements
      summary: Retrieves Tenants that are producers with existing Agreements
      description: Retrieves Tenants that are producers with existing Agreements
      operationId: getAgreementProducers
      parameters:
        - in: query
          name: q
          description: Query to filter Producers by name
          schema:
            type: string
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Producers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactOrganizations'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/filter/consumers':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - agreements
      summary: Retrieves Tenants that are consumers with existing Agreements
      description: Retrieves Tenants that are consumers with existing Agreements
      operationId: getAgreementConsumers
      parameters:
        - in: query
          name: q
          description: Query to filter Consumers by name
          schema:
            type: string
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Consumers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactOrganizations'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: agreementId
        in: path
        description: The identifier of the agreement
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - agreements
      summary: retrieves an agreement
      description: returns an agreement for a given agreementId
      operationId: getAgreementById
      responses:
        '200':
          description: Agreement found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      tags:
        - agreements
      summary: Delete an agreement. This operation is valid only for agreements in DRAFT or MISSING_CERTIFIED_ATTRIBUTES
      operationId: deleteAgreement
      responses:
        '204':
          description: Agreement deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/activate':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Activate an agreement
      description: returns the updated agreement
      operationId: activateAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement flagged as activated. It could still be Suspended if other parties have suspended the agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/clone':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Clone a rejected agreement
      description: returns the created agreement
      operationId: cloneAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement cloned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Agreement already exists with conflicting state
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/consumer-documents':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: agreementId
        in: path
        schema:
          type: string
          format: uuid
        required: true
    post:
      security:
        - bearerAuth: []
      tags:
        - agreements
      summary: Add a consumer Document to an Agreement
      description: Add a consumer Document to an Agreement
      operationId: addAgreementConsumerDocument
      requestBody:
        description: E-Service document
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - prettyName
                - doc
              properties:
                name:
                  type: string
                prettyName:
                  type: string
                doc:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Returns the document.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Resource Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/consumer-documents/{documentId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: agreementId
        in: path
        schema:
          type: string
          format: uuid
        required: true
      - name: documentId
        in: path
        schema:
          type: string
          format: uuid
        required: true
    get:
      security:
        - bearerAuth: []
      tags:
        - agreements
      summary: Retrieve a consumer Document of an Agreement
      description: Retrieve a consumer Document of an Agreement
      operationId: getAgreementConsumerDocument
      responses:
        '200':
          description: Document retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Resource Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      security:
        - bearerAuth: []
      tags:
        - agreements
      summary: Remove a consumer Document from an Agreement
      description: Remove a consumer Document from an Agreement
      operationId: removeAgreementConsumerDocument
      responses:
        '204':
          description: Document removed
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Resource Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/contract':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: agreementId
        in: path
        description: The identifier of the agreement
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - agreements
      summary: retrieves the agreement contract
      description: returns the agreement contract for a given agreementId
      operationId: getAgreementContract
      responses:
        '200':
          description: Agreement contract retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/submit':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Submit an agreement
      description: returns the updated agreement
      operationId: submitAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementSubmissionPayload'
        description: payload for agreement submission
        required: true
      responses:
        '200':
          description: Agreement pending for activation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/suspend':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Suspend an agreement
      description: returns the updated agreement
      operationId: suspendAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement suspended
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/reject':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Reject an agreement
      description: returns the updated agreement
      operationId: rejectAgreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementRejectionPayload'
        required: true
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/archive':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Archive an agreement
      description: returns the updated agreement
      operationId: archiveAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Agreement archived
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/update':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: update an agreement in draft state.
      description: update agreement fields.
      operationId: updateAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementUpdatePayload'
        required: true
      responses:
        '200':
          description: Agreement updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/upgrade':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - agreements
      summary: Upgrade an agreement
      description: returns the updated agreement
      operationId: upgradeAgreement
      parameters:
        - name: agreementId
          in: path
          description: The identifier of the agreement
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: New Agreement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/catalog':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - eservices
      summary: Retrieves EServices catalog
      description: Retrieves EServices catalog
      operationId: getEServicesCatalog
      parameters:
        - in: query
          name: q
          description: Query to filter EServices by name
          schema:
            type: string
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: attributesIds
          description: comma separated sequence of attribute IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false  
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EServiceDescriptorState'
            default: []
          explode: false
        - in: query
          name: agreementStates
          description: comma separated sequence of agreement states to filter the response with
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgreementState'
            default: []
          explode: false
        - in: query
          name: mode
          description: EService Mode filter
          schema:
            $ref: '#/components/schemas/EServiceMode'
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: A list of EServices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogEServices'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'      
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/consumers':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: offset
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
    get:
      tags:
        - tenants
      operationId: getConsumers
      description: Retrieve Tenants that are subscribed to at least one EService
      responses:
        '200':
          description: Tenants retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactOrganizations'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'        
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /eservices:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Create a new EService
      operationId: createEService
      requestBody:
        description: An EService seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceSeed'
        required: true
      responses:
        '200':
          description: EService created
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/consumers:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Retrieve Consumers for an EService
      operationId: getEServiceConsumers
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
            format: uuid 
      responses:
        '200':
          description: E-Service consumers retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: E-Service not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
              
  /eservices/{eServiceId}/descriptors/{descriptorId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    delete:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Deletes a draft descriptor or an eservice if empty
      operationId: deleteDraft
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service Id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: E-Service or draft Descriptor deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Updates a draft descriptor
      operationId: updateDraftDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceDescriptorSeed'
        required: true
      responses:
        '200':
          description: EService with draft descriptor updated.
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Adds a descriptor to the specified e-service
      operationId: createDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceDescriptorSeed'
        required: true
      responses:
        '200':
          description: EService Descriptor created.
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/activate:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Activate the selected descriptor.
      operationId: activateDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: E-Service Descriptor activated
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/publish:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Publish the selected descriptor.
      operationId: publishDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: E-Service Descriptor published
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Resource Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available

  /eservices/{eServiceId}/descriptors/{descriptorId}/suspend:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Suspend the selected descriptor.
      operationId: suspendDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: E-Service Descriptor suspended
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /eservices/{eServiceId}/descriptors/{descriptorId}/documents:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Add new e-service document
      operationId: createEServiceDocument
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: E-Service document
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - kind
                - prettyName
                - doc
              properties:
                kind:
                  type: string
                  description: Document Type
                  enum:
                    - INTERFACE
                    - DOCUMENT
                prettyName:
                  type: string
                doc:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: EService Document created
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    delete:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Deletes an e-service document
      operationId: deleteEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Document deleted.
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: E-Service descriptor document not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    get:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Get an e-service document
      operationId: getEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: EService document retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: EService not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/clone:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Clones the selected descriptor.
      operationId: cloneEServiceByDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Cloned EService with a new draft descriptor updated.
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedEServiceDescriptor'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}/update:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Updates an e-service document
      operationId: updateEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: A payload containing the possible document updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceDescriptorDocumentSeed'
      responses:
        '200':
          description: EService Descriptor updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceDoc'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: EService Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    delete:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Deletes an e-service
      operationId: deleteEService
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: EService deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: Updates EService general information
      operationId: updateEServiceById
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: An E-Service update seed containing the possible updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceSeed'
      responses:
        '200':
          description: E-Service updated
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '404':
          description: E-Service not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/riskAnalysis:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: add a risk analysis to an EService
      operationId: addRiskAnalysisToEService
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceRiskAnalysisSeed'
      responses:
        '204':
          description: Risk analysis added
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/riskAnalysis/{riskAnalysisId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: get EService risk analysis
      operationId: getEServiceRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: riskAnalysisId
          in: path
          description: the risk analysis id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Risk analysis retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceRiskAnalysis'
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: update EService risk analysis
      operationId: updateEServiceRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: riskAnalysisId
          in: path
          description: the risk analysis id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceRiskAnalysisSeed'
      responses:
        '204':
          description: Risk analysis updated
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      security:
        - bearerAuth: []
      tags:
        - eservices
      summary: delete EService risk analysis
      operationId: deleteEServiceRiskAnalysis
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: riskAnalysisId
          in: path
          description: the risk analysis id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Risk analysis deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/producers':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: offset
        required: true
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - tenants
      operationId: getProducers
      description: Retrieve Tenants that have published an EService
      responses:
        '200':
          description: Tenants retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactOrganizations'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/producers/eservices':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - eservices
      summary: Retrieves Producer EServices
      description: Retrieves Producer EServices
      operationId: getProducerEServices
      parameters:
        - in: query
          name: q
          description: Query to filter EServices by name
          schema:
            type: string
        - in: query
          name: consumersIds
          description: comma separated sequence of consumers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: A list of EServices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerEServices'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/producers/agreements/eservices':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - agreements
      summary: Retrieves eservices for producers in agreements
      description: Retrieves eservices for producers in agreements
      operationId: getAgreementEServiceProducers
      parameters:
        - in: query
          name: q
          description: Query to filter EServices by name
          schema:
            type: string
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: EServices found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactEServicesLight'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/consumers/agreements/eservices':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - agreements
      summary: Retrieves eservices for consumers in agreements
      description: Retrieves eservices for consumers in agreements
      operationId: getAgreementEServiceConsumers
      parameters:
        - in: query
          name: q
          description: Query to filter EServices by name
          schema:
            type: string
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: EServices found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactEServicesLight'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/producers/eservices/{eserviceId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: eserviceId
        in: path
        description: the eservice id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - eservices
      summary: Retrieves a producer eservice corresponding to the id
      description: Retrieves a producer eservice corresponding to the id
      operationId: getProducerEServiceDetails
      parameters:
        - name: eserviceId
          in: path
          description: The internal identifier of the eservice
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The corresponding eService descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerEServiceDetails'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Eservice not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/producers/eservices/{eserviceId}/descriptors/{descriptorId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: eserviceId
        in: path
        description: the eservice id
        required: true
        schema:
          type: string
          format: uuid
      - name: descriptorId
        in: path
        description: the descriptor id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - eservices
      summary: Retrieves a producer eservice descriptor corresponding to the id
      description: Retrieves a producer eservice descriptor corresponding to the id
      operationId: getProducerEServiceDescriptor
      parameters:
        - name: eserviceId
          in: path
          description: The internal identifier of the eservice
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The corresponding eService descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerEServiceDescriptor'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Eservice not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /reverse/purposes:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - purposes
      summary: create a purposes with an EService risk analysis
      description: create a purposes with an EService risk analysis
      operationId: createPurposeForReceiveEservice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeEServiceSeed'
      responses:
        '200':
          description: Purpose created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Eservice not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /reverse/purposes/{purposeId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    post:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
      tags:
        - purposes
      operationId: updateReversePurpose
      description: Updates a reverse Purpose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversePurposeUpdateContent'
        required: true
      responses:
        '200':
          description: Purpose updated
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
        '400':
          description: Bad Request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/catalog/eservices/{eserviceId}/descriptor/{descriptorId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: eserviceId
        in: path
        description: the eservice id
        required: true
        schema:
          type: string
          format: uuid
      - name: descriptorId
        in: path
        description: the descriptor id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - eservices
      summary: Retrieves the catalog eservice descriptor corresponding to the id
      description: Retrieves the catalog eservice descriptor corresponding to the id
      operationId: getCatalogEServiceDescriptor
      parameters:
        - name: eserviceId
          in: path
          description: The internal identifier of the eservice
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The corresponding eService descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogEServiceDescriptor'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Eservice not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/session/tokens':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      security: [ { } ]
      tags:
        - authorization
      operationId: getSessionToken
      description: Retrieve a session token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityToken'
      responses:
        '200':
          description: Session token requested
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionToken'
  '/tenants/{tenantId}/users':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - selfcare
      summary: returns the users related to the institution
      description: Return ok
      operationId: getInstitutionUsers
      parameters:
        - in: path
          name: tenantId
          description: The internal identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: personId
          description: the person identifier
          schema:
            type: string
            format: uuid
        - in: query
          name: roles
          description: comma separated sequence of role to filter the response with
          schema:
            type: array
            items:
              type: string
            default: []
          explode: false
        - in: query
          name: query
          description: filter applied to name/surname
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tools/validateTokenGeneration':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - tools
      summary: Validate token generation request
      description: Provides additional details about token generation request failure
      operationId: validateTokenGeneration
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        '200':
          description: Request successfully validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGenerationValidationResult'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Validation failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/users/{userId}':
    get:
      tags:
        - selfcare
      summary: Gets the corresponding user
      description: Gets user
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: The identifier of the user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tenants/{tenantId}/attributes/certified':
    get:
      tags:
        - tenants
      summary: Gets the certified attributes of an institution using internal institution id
      description: Gets certified attributes for institution using internal institution id
      operationId: getCertifiedAttributes
      parameters:
        - name: tenantId
          in: path
          description: The internal identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertifiedAttributesResponse'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/purposes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - purposes
      operationId: createPurpose
      description: Creates the Purpose
      responses:
        '200':
          description: Purpose created
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
        '400':
          description: Bad Request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeSeed'
        required: true
  '/producer/purposes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - purposes
      operationId: getProducerPurposes
      description: Retrieve Purposes from the producer prospective
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: eservicesIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: consumersIds
          description: comma separated sequence of consumers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PurposeVersionState'
            default: []
          explode: false
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Purposes retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purposes'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/consumer/purposes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - purposes
      operationId: getConsumerPurposes
      description: Retrieve Purposes from the consumer prospective
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: eservicesIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: consumersIds
          description: comma separated sequence of consumers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PurposeVersionState'
            default: []
          explode: false
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Purposes retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purposes'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}/clone:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposes
      description: clone purpose
      summary: Clone Purpose
      operationId: clonePurpose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeCloneSeed'
        required: true
      responses:
        '200':
          description: Purpose Cloned
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Purpose cannot be cloned
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}/versions:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposes
      operationId: createPurposeVersion
      description: Creates a draft Purpose Version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeVersionSeed'
        required: true
      responses:
        '200':
          description: Purpose created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}/versions/{versionId}/documents/{documentId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      security:
        - bearerAuth: []
      tags:
        - purposes
      summary: Get an Risk Analysis document
      operationId: getRiskAnalysisDocument
      parameters:
        - name: purposeId
          in: path
          description: the purpose id
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: the version Id
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Risk Analysis document retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Risk Analysis document not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}/versions/{versionId}/archive:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposes
      description: archives the purpose version by id
      summary: Archive Purpose Version
      operationId: archivePurposeVersion
      responses:
        '200':
          description: Purpose Version Archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}/versions/{versionId}/suspend:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposes
      summary: Suspend Purpose Version
      operationId: suspendPurposeVersion
      responses:
        '200':
          description: Purpose Version Suspended
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      description: suspends the purpose version by id
  /purposes/{purposeId}/versions/{versionId}/update/waitingForApproval:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purposes
      summary: Update a purpose version in waiting for approval
      operationId: updateWaitingForApprovalPurposeVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitingForApprovalPurposeVersionUpdateContentSeed'
        required: true
      responses:
        '200':
          description: Purpose Version updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/{purposeId}/versions/{versionId}/activate:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Activate Purpose Version
      operationId: activatePurposeVersion
      responses:
        '200':
          description: Purpose Version Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      tags:
        - purposes
      description: activates the purpose version by id
  '/tenants/attributes/declared':
    post:
      tags:
        - tenants
      summary: Adds the declared attribute to the Institution
      description: Adds the declared attribute to the Institution
      operationId: addDeclaredAttribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclaredTenantAttributeSeed'
      responses:
        '204':
          description: successful operation
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tenants/attributes/declared/{attributeId}':
    delete:
      tags:
        - tenants
      summary: Revokes the declared attribute to the Institution
      description: Revokes the declared attribute to the Institution
      operationId: revokeDeclaredAttribute
      parameters:
        - name: attributeId
          in: path
          description: The internal identifier of the attribute
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: successful operation
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/{purposeId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - purposes
      operationId: getPurpose
      description: Retrieve the Purpose
      responses:
        '200':
          description: Purpose requested
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
      tags:
        - purposes
      operationId: deletePurpose
      description: Deletes a specific purpose if there are no version and just a draft version or a waiting for approval version
      responses:
        '204':
          description: Purpose deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    post:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
      tags:
        - purposes
      operationId: updatePurpose
      description: Updates a Purpose if not yet activated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeUpdateContent'
        required: true
      responses:
        '200':
          description: Purpose updated
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionResource'
        '400':
          description: Bad Request
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/{purposeId}/versions/{versionId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - purposes
      operationId: deletePurposeVersion
      description: deletes the purpose version by id
      summary: Delete a Purpose Version
      responses:
        '204':
          description: Purpose Version Deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tenants/{tenantId}/attributes/declared':
    parameters:
      - name: tenantId
        in: path
        description: Tenant id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - tenants
      summary: Gets the declared attributes of an institution using internal institution id
      description: Gets declared attributes for institution using internal institution id
      operationId: getDeclaredAttributes
      parameters:
        - name: tenantId
          in: path
          description: The internal identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclaredAttributesResponse'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tenants/{tenantId}/attributes/verified':
    parameters:
      - name: tenantId
        in: path
        description: Tenant id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - tenants
      summary: Gets the verified attributes of an institution using internal institution id
      description: Gets verified attributes for institution using internal institution id
      operationId: getVerifiedAttributes
      parameters:
        - name: tenantId
          in: path
          description: The internal identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedAttributesResponse'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    post:
      tags:
        - tenants
      summary: Adds the verified attribute to the Institution
      description: Adds the verified attribute to the Institution
      operationId: verifyVerifiedAttribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifiedTenantAttributeSeed'
      responses:
        '204':
          description: successful operation
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Attribute already verified for the Tenant
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/tenants/{tenantId}/attributes/verified/{attributeId}':
    parameters:
      - name: tenantId
        in: path
        description: Tenant id which attribute needs to be verified
        required: true
        schema:
          type: string
          format: uuid
      - name: attributeId
        in: path
        description: Attribute id to be revoked
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - tenants
      summary: Update expirationDate for Verified Attribute of Tenant
      description: Update expirationDate for Verified Attribute of Tenant
      operationId: updateVerifiedAttribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVerifiedTenantAttributeSeed'
      responses:
        '204':
          description: successful operation
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      tags:
        - tenants
      operationId: revokeVerifiedAttribute
      description: Revoke a Verified attribute to a Tenant by the requester Tenant
      responses:
        '204':
          description: Updated Tenant
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Attribute already revoked for the Tenant
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/certifiedAttributes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      summary: Creates attribute
      tags:
        - attributes
      operationId: createCertifiedAttribute
      responses:
        '200':
          description: Attribute created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      description: Creates the attribute passed as payload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertifiedAttributeSeed'
        description: Contains the attribute data to save.
  '/verifiedAttributes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      summary: Creates verified attribute
      tags:
        - attributes
      operationId: createVerifiedAttribute
      responses:
        '200':
          description: Verified Attribute created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      description: Creates the attribute passed as payload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeSeed'
        description: Contains the attribute data to save.
  '/declaredAttributes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      summary: Creates declared attribute
      tags:
        - attributes
      operationId: createDeclaredAttribute
      responses:
        '200':
          description: Declared Attribute created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      description: Creates the attribute passed as payload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeSeed'
        description: Contains the attribute data to save.
  '/attributes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      summary: Get attributes
      operationId: getAttributes
      description: 'returns attributes'
      tags:
        - attributes
      parameters:
        - in: query
          name: q
          description: Query to filter Attributes by name
          schema:
            type: string
        - in: query
          name: origin
          description: Query to filter Attributes by origin
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
          required: true
        - in: query
          name: offset
          schema:
            type: integer
          required: true
        - in: query
          name: kinds
          description: Array of kinds
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AttributeKind'
          required: true
      responses:
        '200':
          description: A List of Attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/attributes/{attributeId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - schema:
          type: string
          format: uuid
        name: attributeId
        in: path
        required: true
        description: 'Attribute ID'
    get:
      summary: Get Attribute by ID
      tags:
        - attributes
      responses:
        '200':
          description: Attribute data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Attribute not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      operationId: getAttributeById
      description: 'returns the attribute with given ID, if any.'
  '/attributes/origin/{origin}/code/{code}':
    get:
      summary: Get Attribute by origin and code
      tags:
        - attributes
      responses:
        '200':
          description: Attribute data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Attribute not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
      operationId: getAttributeByOriginAndCode
      description: 'returns the attribute in the registry corresponding to origin and code, if any.'
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - schema:
          type: string
        name: origin
        in: path
        required: true
        description: 'origin of the attribute to lookup (e.g.: IPA).'
      - schema:
          type: string
        name: code
        in: path
        required: true
        description: 'code of the attribute to lookup (e.g.: unique identifier of IPA).'
  '/tenants/{tenantId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: tenantId
        in: path
        description: the tenant id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - tenants
      summary: Gets the corresponding institution using internal institution id
      description: Gets institution using internal institution id
      operationId: getTenant
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /tenants/{tenantId}/mails:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: tenantId
        in: path
        description: the tenant id
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - tenants
      summary: Add a tenant mail
      operationId: addTenantMail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSeed'
      responses:
        '204':
          description: Tenant Mail Added
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/{tenantId}/mails/{mailId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: tenantId
        in: path
        description: the tenant id
        required: true
        schema:
          type: string
          format: uuid
      - name: mailId
        in: path
        description: the mail id
        required: true
        schema:
          type: string
    delete:
      tags:
        - tenants
      summary: Delete a tenant mail
      operationId: deleteTenantMail
      responses:
        '204':
          description: Tenant Mail Deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'  
        '404':
          description: Tenant not found
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'                 
  '/tenants':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
    get:
      tags:
        - tenants
      operationId: getTenants
      description: Retrieve Tenants by name
      responses:
        '200':
          description: Tenants retrieved
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenants'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clients:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - clients
      summary: retrieves a list of clients
      description: retrieves a list of clients
      operationId: getClients
      parameters:
        - in: query
          name: q
          description: Query to filter Clients by name
          schema:
            type: string
        - in: query
          name: userIds
          description: comma separated sequence of user IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: kind
          description: type of Client to be retrieved
          schema:
            $ref: '#/components/schemas/ClientKind'
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Clients found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactClients'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clients/{clientId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      description: Retrieves a Client
      tags:
        - clients
      summary: Get a Client
      operationId: getClient
      parameters:
        - name: clientId
          in: path
          description: The Client id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Client retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      description: Deletes a Client
      tags:
        - clients
      summary: Delete a Client
      operationId: deleteClient
      parameters:
        - name: clientId
          in: path
          description: The Client id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Client deleted
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clients/{clientId}/purposes/{purposeId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    delete:
      tags:
        - clients
      summary: Removes a purpose from a client
      description: Removes a purpose from a client
      operationId: removeClientPurpose
      parameters:
        - name: clientId
          in: path
          description: ID of Client
          required: true
          schema:
            type: string
            format: uuid
        - name: purposeId
          in: path
          description: ID of Purpose
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Purpose removed from Client
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clients/{clientId}/keys/{keyId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - clients
      summary: Returns a key by client and key identifier (kid).
      description: 'Given a client and key identifiers it returns the corresponding key, if any'
      operationId: getClientKeyById
      parameters:
        - name: clientId
          in: path
          description: ID of the client to look up
          required: true
          schema:
            type: string
            format: uuid
        - name: keyId
          in: path
          description: the unique identifier of the key (kid) to lookup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns the corresponding key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available      
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available      
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available      
        '404':
          description: Key not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available      
    delete:
      tags:
        - clients
      summary: Deletes a key by client and key identifier (kid).
      description: 'Given a client and key identifiers it deletes the corresponding key, if any'
      operationId: deleteClientKeyById
      parameters:
        - name: clientId
          in: path
          description: ID of the client holding the key
          required: true
          schema:
            type: string
            format: uuid
        - name: keyId
          in: path
          description: the unique identifier of the key (kid) to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: the corresponding key has been deleted.
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Key not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clients/{clientId}/users/{userId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: clientId
        in: path
        description: The Client id
        required: true
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: The identifier of the user between the security user and the consumer
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - clients
      summary: Binds an user to a Client
      description: Binds a security user belonging to a consumer to a Client
      operationId: addUserToClient
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Missing Required Information
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      tags:
        - clients
      summary: Remove an user from a Client
      description: Removes an user from a Client
      operationId: removeUserFromClient
      responses:
        '204':
          description: User removed
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client or user not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}/purposes':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - clients
      summary: Adds a purpose to a client
      description: Adds a purpose to a client
      operationId: addClientPurpose
      parameters:
        - name: clientId
          in: path
          description: ID of Client
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        description: Details of the Purpose to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeAdditionDetailsSeed'
      responses:
        '204':
          description: Request succeed
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/selfcare/institutions/products':
    get:
      tags:
        - selfcare
      summary: getInstitutionUserProducts
      description: Service to retrieve all active products for given institution and user
      operationId: getInstitutionUserProducts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SelfcareProduct'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/selfcare/institutions':
    get:
      tags:
        - selfcare
      summary: getInstitutions
      description: The service retrieves all the onboarded institutions related to the provided user
      operationId: getInstitutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SelfcareInstitution'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}/users':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - clients
      summary: List client users
      description: List client users
      operationId: getClientUsers
      parameters:
        - name: clientId
          in: path
          description: ID of Client the users belong to
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Request succeed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompactUsers'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}/keys':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - clients
      summary: Create Keys for the specific clientId.
      operationId: createKeys
      requestBody:
        required: true
        description: an array of base64 encoded PEM keys.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeysSeed'
      description: Creates one or more keys for the corresponding client.
      parameters:
        - name: clientId
          in: path
          required: true
          description: ID of client that the added keys MUST belong to
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Keys created
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client id not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Key already exists
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    get:
      tags:
        - clients
      summary: Returns a set of keys by client ID.
      description: Given a client identifier it returns its corresponding set of keys, if any
      operationId: getClientKeys
      parameters:
        - name: clientId
          in: path
          description: ID of Client
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: userIds
          description: comma separated sequence of user IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []    
      responses:
        '200':
          description: returns the corresponding array of keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeys'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client id not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}/encoded/keys/{keyId}':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - clients
      summary: Returns a base64 encoded key by client and key identifier (kid).
      description: 'Given a client and key identifiers it returns the corresponding encoded key, if any'
      operationId: getEncodedClientKeyById
      parameters:
        - name: clientId
          in: path
          description: ID of the client to look up
          required: true
          schema:
            type: string
            format: uuid
        - name: keyId
          in: path
          description: the unique identifier of the key (kid) to lookup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns the corresponding base 64 encoded key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncodedClientKey'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Key not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clientsConsumer:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - clients
      summary: Create a new consumer client
      description: Create a new consumer client
      operationId: createConsumerClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSeed'
      responses:
        '200':
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /clientsApi:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - clients
      summary: Create a new API client
      description: Create a new API client
      operationId: createApiClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSeed'
      responses:
        '200':
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResource'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}/users/{userId}/keys':
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: clientId
        in: path
        description: ID of the client holding the key
        required: true
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        required: true
        description: ID of the User that the added keys MUST belong to
        schema:
          type: string
          format: uuid
    get:
      tags:
        - clients
      summary: Returns a set of keys by user ID and client ID.
      description: 'Given a user and a client it returns its corresponding set of keys, if any'
      operationId: getClientUserKeys
      responses:
        '200':
          description: returns the corresponding array of keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeys'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client id not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/riskAnalysis/latest:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    get:
      tags:
        - purposes
      operationId: retrieveLatestRiskAnalysisConfiguration
      description: Retrieve latest risk analysis configuration
      responses:
        '200':
          description: Risk analysis requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAnalysisFormConfig'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /purposes/riskAnalysis/version/{riskAnalysisVersion}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - name: riskAnalysisVersion
        in: path
        required: true
        schema:
          type: string
      - name: eserviceId
        in: query
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - purposes
      operationId: retrieveRiskAnalysisConfigurationByVersion
      description: Retrieve a specified version of risk analysis configuration
      responses:
        '200':
          description: Risk analysis requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAnalysisFormConfig'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Version not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /user/consent/{consentType}:
    parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - name: consentType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ConsentType'
    get:
        tags:
          - privacyNotices
        operationId: getPrivacyNotice
        description: Retrieve a specified version of privacy notice
        responses:
          '200':
            description: Retrieve Privacy Notice
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PrivacyNotice'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          '400':
            description: Bad Request
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/Problem'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          '404':
            description: Not found
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/Problem'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    post:
        tags:
          - privacyNotices
        operationId: acceptPrivacyNotice
        description: User approve a privacy notice
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyNoticeSeed'
        responses:
          '204':
            description: Privacy Notices accepted
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          '400':
            description: Bad Request
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/Problem'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /privacyNotices/{consentType}:
    parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - name: consentType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ConsentType'
    get:
        tags:
          - privacyNotices
        operationId: getPrivacyNoticeContent
        description: Retrieve the content of the privacy notice version
        responses:
          '200':
            description: Retrieve Privacy Notice
            content:
              application/octet-stream:
                schema:
                  type: string
                  format: binary
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          '400':
            description: Bad Request
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/Problem'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
          '404':
            description: Not found
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/Problem'
            headers:
              'X-Rate-Limit-Limit':
                schema:
                  type: integer
                description: Max allowed requests within time interval
              'X-Rate-Limit-Remaining':
                schema:
                  type: integer
                description: Remaining requests within time interval
              'X-Rate-Limit-Interval':
                schema:
                  type: integer
                description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /support:
    post:
      tags:
          - authorization
      security: []
      operationId: samlLoginCallback
      description: This route is used to redirect support flow to the dedicated page
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleSAMLPayload'
      responses:
        '302':
          description: Redirection in case of success SAML validation or error
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /session/saml2/tokens:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
    post:
      tags:
        - support
      summary: Returns the generated token
      description: Returns the generated token
      operationId: getSaml2Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLTokenRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionToken'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/status':
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
  schemas:
    GoogleSAMLPayload:
      type: object
      properties:
        SAMLResponse:
          type: string
          description: SAML response
        RelayState:
          type: string
          nullable: true
      required:
        - SAMLResponse
        - RelayState
    SAMLTokenRequest:
      type: object
      properties:
        saml2:
          type: string
          description: SAML
        tenantId:
          type: string
          format: uuid
          description: tenant id
      required:
        - saml2
        - tenantId
    AccessTokenRequest:
      type: object
      required:
        - client_assertion
        - client_assertion_type
        - grant_type
      properties:
        client_id:
          type: string
          example: e58035ce-c753-4f72-b613-46f8a17b71cc
        client_assertion:
          type: string
          format: jws
        client_assertion_type:
          type: string
        grant_type:
          type: string
    PrivacyNotice:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        userId: 
          type: string
          format: uuid
        consentType:
          $ref: '#/components/schemas/ConsentType'
        firstAccept:
          type: boolean
        isUpdated:
          type: boolean
        latestVersionId:
          type: string
          format: uuid
      required:
        - id
        - userId
        - consentType
        - firstAccept
        - isUpdated
        - latestVersionId
    ConsentType:
      type: string
      description: Consent Type
      enum:
        - PP
        - TOS
    PrivacyNoticeSeed:
      type: object
      properties:
        latestVersionId: 
          type: string
          format: uuid
      required:
        - latestVersionId    
    RiskAnalysisFormConfig:
      type: object
      properties:
        version: 
          type: string
        questions: 
          type: array
          items:
            $ref: '#/components/schemas/FormConfigQuestion'
      required:
        - version
        - questions 
    FormConfigQuestion:
      type: object
      properties:
        id:
          type: string
        label: 
          $ref: '#/components/schemas/LocalizedText'
        infoLabel: 
          $ref: '#/components/schemas/LocalizedText'
        dataType: 
          $ref: '#/components/schemas/DataType'
        required:
          type: boolean
        dependencies: 
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        visualType:
          type: string
        defaultValue:
          type: array
          items:
            type: string
        hideOption:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/HideOption'
        validation:
          $ref: '#/components/schemas/ValidationOption'         
        options:
          type: array
          items:
            $ref: '#/components/schemas/LabeledValue'    
      required:
        - id
        - label
        - dataType
        - required
        - dependencies
        - visualType
        - defaultValue
    ValidationOption:
        type: object
        properties:
          maxLength:
            type: integer
            format: int32
    HideOption:
        type: object
        properties:
          id:
            type: string
          value:
            type: string
        required:
          - id
          - value       
    LabeledValue:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LocalizedText'
        value:
          type: string
      required:
        - label
        - value      
    LocalizedText:
      type: object
      properties:
        it:
          type: string
        en:
          type: string
      required:
        - it
        - en
    DataType:
      type: string
      description: Data Type Question
      enum:
        - SINGLE
        - MULTI
        - FREETEXT
    Dependency:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - id
        - value
    UpdateEServiceSeed:
      type: object
      required:
        - name
        - description
        - technology
        - mode
      properties:
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        mode:
          $ref: '#/components/schemas/EServiceMode'
    EServiceSeed:
      type: object
      required:
        - name
        - description
        - technology
        - mode
      properties:
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        mode:
          $ref: '#/components/schemas/EServiceMode'
    UpdateEServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - attributes
      type: object
      properties:
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
        attributes:
          $ref: '#/components/schemas/DescriptorAttributesSeed'
    Mail:
      type: object
      required:
        - address
      properties:
        address:
          type: string
        description:
          type: string
    EServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - attributes
      type: object
      properties:
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
        attributes:
          $ref: '#/components/schemas/DescriptorAttributesSeed'
    CatalogEServiceDescriptor:
      type: object
      required:
        - eservice
        - id
        - version
        - docs
        - state
        - audience
        - attributes
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - hasCertifiedAttributes
        - isSubscribed
        - isMine
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        description:
          type: string
        interface:
          $ref: '#/components/schemas/EServiceDoc'
        docs:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDoc'
        attributes:
          $ref: '#/components/schemas/DescriptorAttributes'
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
          minimum: 0
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
        eservice:
          $ref: '#/components/schemas/CatalogDescriptorEService'
        publishedAt:
          type: string
          format: date-time
        suspendedAt:
          type: string
          format: date-time
        deprecatedAt:
          type: string
          format: date-time
        archivedAt:
          type: string
          format: date-time
    Client:
      description: Models Client details
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        consumer:
          $ref: '#/components/schemas/CompactOrganization'
        name:
          type: string
        purposes:
          type: array
          items:
            $ref: '#/components/schemas/ClientPurpose'
        description:
          type: string
        kind:
          $ref: '#/components/schemas/ClientKind'
      required:
        - id
        - organization
        - consumer
        - name
        - purposes
        - kind
        - createdAt
    ClientPurpose:
      type: object
      properties:
        purposeId:
          type: string
          format: uuid
        title:
          type: string
        eservice:
          $ref: '#/components/schemas/CompactEService'  
      required:
        - purposeId
        - title
        - eservice
    PurposeCloneSeed:
      type: object
      properties:
        eserviceId:
          type: string
          format: uuid
      required:
        - eserviceId    
    CatalogDescriptorEService:
      type: object
      required:
        - id
        - name
        - producer
        - description
        - technology
        - mode
        - riskAnalysis
        - descriptors
        - isMine
        - hasCertifiedAttributes
        - isSubscribed
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        producer:
          $ref: '#/components/schemas/CompactOrganization'
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        mode:
          $ref: '#/components/schemas/EServiceMode'
        riskAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/EServiceRiskAnalysis'
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/CompactDescriptor'
        agreement:
          $ref: '#/components/schemas/CompactAgreement'
        isMine:
          type: boolean
        hasCertifiedAttributes:
          type: boolean
        isSubscribed:
          type: boolean
        activeDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
        mail:
          $ref: '#/components/schemas/Mail'
    ProducerEServiceDetails:
      type: object
      required:
        - id
        - name
        - description
        - technology
        - mode
        - riskAnalysis
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        mode:
          $ref: '#/components/schemas/EServiceMode'
        riskAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/EServiceRiskAnalysis'
    EServiceMode:
      type: string
      description: Risk Analysis Mode
      enum:
        - RECEIVE
        - DELIVER
    EServiceRiskAnalysisSeed:
      type: object
      required:
        - name
        - riskAnalysisForm
      properties:
        name:
          type: string
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisFormSeed'
    EServiceRiskAnalysis:
      type: object
      required:
        - id
        - name
        - riskAnalysisForm
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisForm'
        createdAt:
          type: string
          format: date-time
    ProducerEServiceDescriptor:
      type: object
      required:
        - id
        - version
        - docs
        - state
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
        - eservice
        - attributes
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        description:
          type: string
        interface:
          $ref: '#/components/schemas/EServiceDoc'
        docs:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDoc'
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
          minimum: 0
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
        eservice:
          $ref: '#/components/schemas/ProducerDescriptorEService'
        attributes:
          $ref: '#/components/schemas/DescriptorAttributes'
    ProducerDescriptorEService:
      type: object
      required:
        - id
        - name
        - description
        - technology
        - mode
        - riskAnalysis
        - descriptors
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        mode:
          $ref: '#/components/schemas/EServiceMode'
        riskAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/EServiceRiskAnalysis'
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/CompactDescriptor'
        draftDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
        mail:
          $ref: '#/components/schemas/Mail'
    EServiceDoc:
      type: object
      required:
        - id
        - name
        - contentType
        - prettyName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contentType:
          type: string
        prettyName:
          type: string
    UpdateEServiceDescriptorDocumentSeed:
      type: object
      required:
        - prettyName
      properties:
        prettyName:
          type: string
    AgreementApprovalPolicy:
      type: string
      description: |
        EService Descriptor policy for new Agreements approval.
        AUTOMATIC - the agreement will be automatically approved if Consumer attributes are met
        MANUAL - the Producer must approve every agreement for this Descriptor.
      enum:
        - AUTOMATIC
        - MANUAL
    Agreement:
      properties:
        id:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
        producer:
          $ref: '#/components/schemas/CompactOrganization'
        consumer:
          $ref: '#/components/schemas/Tenant'
        eservice:
          $ref: '#/components/schemas/AgreementsEService'
        state:
          $ref: '#/components/schemas/AgreementState'
        verifiedAttributes:
          type: array
          description: 'set of the verified attributes belonging to this agreement, if any.'
          items:
            $ref: '#/components/schemas/VerifiedAttribute'
        certifiedAttributes:
          type: array
          description: 'set of the certified attributes belonging to this agreement, if any.'
          items:
            $ref: '#/components/schemas/CertifiedAttribute'
        declaredAttributes:
          type: array
          description: 'set of the declared attributes belonging to this agreement, if any.'
          items:
            $ref: '#/components/schemas/DeclaredAttribute'
        suspendedByConsumer:
          type: boolean
        suspendedByProducer:
          type: boolean
        suspendedByPlatform:
          type: boolean
        isContractPresent:
          type: boolean
        consumerNotes:
          type: string
        rejectionReason:
          type: string
        consumerDocuments:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        suspendedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
        - id
        - producer
        - consumer
        - descriptorId
        - eservice
        - attributes
        - state
        - verifiedAttributes
        - certifiedAttributes
        - declaredAttributes
        - consumerDocuments
        - createdAt
        - isContractPresent
    Agreements:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AgreementListEntry'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    AgreementPayload:
      type: object
      description: contains the information for agreement creation.
      properties:
        eserviceId:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
      required:
        - eserviceId
        - descriptorId
    AgreementUpdatePayload:
      type: object
      description: contains the information for agreement update.
      properties:
        consumerNotes:
          type: string
      required:
        - consumerNotes
    AgreementSubmissionPayload:
      type: object
      description: contains the information for agreement creation.
      properties:
        consumerNotes:
          type: string
    AgreementRejectionPayload:
      type: object
      description: contains the information for agreement rejection.
      properties:
        reason:
          type: string
      required:
        - reason
    CatalogEServices:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CatalogEService'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    CatalogEService:
      type: object
      required:
        - id
        - name
        - description
        - producer
        - isMine
        - hasCertifiedAttributes
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        producer:
          $ref: '#/components/schemas/CompactOrganization'
        agreement:
          $ref: '#/components/schemas/CompactAgreement'
        isMine:
          type: boolean
        hasCertifiedAttributes:
          type: boolean
        activeDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
    ClientKind:
      type: string
      enum:
        - API
        - CONSUMER
    CompactClients:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompactClient'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    AgreementListEntry:
      type: object
      required:
        - id
        - eservice
        - consumer
        - canBeUpgraded
        - state
        - descriptor
      properties:
        id:
          type: string
          format: uuid
        consumer:
          $ref: '#/components/schemas/CompactOrganization'
        eservice:
          $ref: '#/components/schemas/CompactEService'
        state:
          $ref: '#/components/schemas/AgreementState'
        canBeUpgraded:
          type: boolean
        suspendedByConsumer:
          type: boolean
        suspendedByProducer:
          type: boolean
        suspendedByPlatform:
          type: boolean
        descriptor:
          $ref: '#/components/schemas/CompactDescriptor'
    CompactAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    CompactAgreement:
      type: object
      required:
        - id
        - state
        - canBeUpgraded
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/AgreementState'
        canBeUpgraded:
          type: boolean
    CompactDescriptor:
      type: object
      required:
        - id
        - state
        - version
        - audience
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        version:
          type: string
        audience:
          type: array
          items:
            type: string
    CompactEService:
      type: object
      required:
        - id
        - name
        - producer
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        producer:
          $ref: '#/components/schemas/CompactOrganization'
    CompactPurposeEService:
      type: object
      required:
        - id
        - name
        - producer
        - descriptor
        - mode
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        producer:
          $ref: '#/components/schemas/CompactOrganization'
        descriptor:
          $ref: '#/components/schemas/CompactDescriptor'
        mode:
          $ref: '#/components/schemas/EServiceMode'  
    PurposeVersionSeed:
      type: object
      description: contains the expected payload for purpose version creation.
      required:
        - dailyCalls
      properties:
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
          minimum: 0
    PurposeSeed:
      type: object
      description: contains the expected payload for purpose creation.
      properties:
        eserviceId:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisFormSeed'
        title:
          type: string
        description:
          type: string
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          type: integer
          format: int32
          minimum: 0  
      required:
        - eserviceId
        - consumerId
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    PurposeEServiceSeed:
      type: object
      description: contains the expected payload for purpose creation.
      properties:
        eserviceId:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
        riskAnalysisId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          type: integer
          format: int32
          minimum: 0
      required:
        - eserviceId
        - consumerId
        - riskAnalysisId
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    WaitingForApprovalPurposeVersionUpdateContentSeed:
      type: object
      description: contains the expected payload for purpose version update.
      properties:
        expectedApprovalDate:
          description: 'Estimated expected approval date for a purpose version'
          type: string
          format: date-time
      required:
        - expectedApprovalDate
    CompactOrganization:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        kind:
          $ref: '#/components/schemas/TenantKind'
        contactMail:
          $ref: '#/components/schemas/Mail'
    TenantKind:
      type: string
      enum:
        - PA
        - PRIVATE
        - GSP
    CompactOrganizations:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompactOrganization'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    CompactEServiceLight:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    CompactEServicesLight:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompactEServiceLight'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    AgreementState:
      type: string
      description: Agreement State
      enum:
        - DRAFT
        - ACTIVE
        - ARCHIVED
        - PENDING
        - SUSPENDED
        - MISSING_CERTIFIED_ATTRIBUTES
        - REJECTED
    IdentityToken:
      type: object
      required:
        - identity_token
      properties:
        identity_token:
          type: string
          format: jws
    SessionToken:
      type: object
      required:
        - session_token
      properties:
        session_token:
          type: string
          format: jws
    Pagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      required:
        - offset
        - limit
        - totalCount
    ProducerEService:
      type: object
      required:
        - id
        - name
        - mode
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        mode:
          $ref: '#/components/schemas/EServiceMode'
        activeDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
        draftDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
    ProducerEServices:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProducerEService'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    ProductInfo:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - role
        - createdAt
    SelfcareProduct:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    SelfcareInstitution:
      type: object
      properties:
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        description:
          type: string
          description: Institution's legal name
        userProductRoles:
          type: array
          items:
            type: string
          description: User's roles on product
        parent:
          type: string
          description: The name of the root parent
      required:
        - id
        - description
        - userProductRoles
    Purpose:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        consumer:
          $ref: '#/components/schemas/CompactOrganization'
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisForm'
        eservice:
          $ref: '#/components/schemas/CompactPurposeEService'
        agreement:
          $ref: '#/components/schemas/CompactAgreement'
        currentVersion:
          $ref: '#/components/schemas/PurposeVersion'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PurposeVersion'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/CompactClient'
        waitingForApprovalVersion:
          $ref: '#/components/schemas/PurposeVersion'
        suspendedByConsumer:
          type: boolean
        suspendedByProducer:
          type: boolean
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
      required:
        - id
        - title
        - description
        - consumer
        - versions
        - clients
        - eservice
        - agreement
        - isFreeOfCharge
        - dailyCallsPerConsumer
        - dailyCallsTotal
    PurposeAdditionDetailsSeed:
      type: object
      properties:
        purposeId:
          type: string
          format: uuid
      required:
        - purposeId
    CompactUsers:
      type: array
      items:
        $ref: '#/components/schemas/CompactUser'
    KeysSeed:
      type: array
      items:
        $ref: '#/components/schemas/KeySeed'
    KeySeed:
      description: 'Models the seed for a public key to be persisted'
      type: object
      properties:
        key:
          type: string
          description: 'Base64 UTF-8 encoding of a public key in PEM format'
        use:
          $ref: '#/components/schemas/KeyUse'
        alg:
          type: string
          description: 'The algorithm type of the key.'
        name:
          type: string
          description: 'Name given to the current key.'
          minLength: 5
          maxLength: 60
      required:
        - key
        - use
        - alg
        - name
    KeyUse:
      type: string
      description: Represents the Use field of key
      enum:
        - SIG
        - ENC
    EncodedClientKey:
      type: object
      properties:
        key:
          type: string
          description: 'base64 encoded key'
      required:
        - key
        - purposeId
    ClientSeed:
      description: Client creation request body
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        members:
          items:
            type: string
            format: uuid    
      required:
        - name
        - members
    CompactClient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        hasKeys:
          type: boolean
      required:
        - id
        - name
        - hasKeys
    PurposeUpdateContent:
      type: object
      description: contains the expected payload for purpose update.
      properties:
        title:
          type: string
        description:
          type: string
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string      
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisFormSeed'
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
      required:
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    ReversePurposeUpdateContent:
      type: object
      description: contains the expected payload for purpose update.
      properties:
        title:
          type: string
        description:
          type: string
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
      required:
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    Purposes:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Purpose'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    PurposeVersion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/PurposeVersionState'
        createdAt:
          type: string
          format: date-time
        suspendedAt:
          type: string
          format: date-time
        expectedApprovalDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        firstActivationAt:
          type: string
          format: date-time
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
        riskAnalysisDocument:
          $ref: '#/components/schemas/PurposeVersionDocument'
      required:
        - id
        - state
        - dailyCalls
        - createdAt
      description: business representation of a purpose version
    PurposeVersionDocument:
      type: object
      required:
        - id
        - contentType
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        contentType:
          type: string
        createdAt:
          type: string
          format: date-time
    PurposeVersionResource:
      type: object
      description: contains the purposeId and the versionId of the created resource
      properties:
        purposeId:
          type: string
          format: uuid
        versionId:
          type: string
          format: uuid
      required:
        - purposeId
        - versionId
    PurposeVersionState:
      type: string
      description: Purpose State
      enum:
        - ACTIVE
        - DRAFT
        - SUSPENDED
        - WAITING_FOR_APPROVAL
        - ARCHIVED
    User:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        tenantId:
          type: string
          format: uuid
        name:
          type: string
        familyName:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
        - userId
        - tenantId
        - name
        - familyName
        - roles
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    RiskAnalysisForm:
      type: object
      properties:
        version:
          type: string
        answers:
          additionalProperties:
            type: array
            items:
              type: string
        riskAnalysisId:
          type: string
          format: uuid
      required:
        - version
        - answers
    RiskAnalysisFormSeed:
      type: object
      properties:
        version:
          type: string
        answers:
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - version
        - answers
    CreatedResource:
      type: object
      description: contains the id of the created resource
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    CreatedEServiceDescriptor:
      type: object
      description: contains the id of the created resource with the descriptorId
      properties:
        id:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
      required:
        - id
        - descriptorId
    Document:
      type: object
      required:
        - id
        - name
        - prettyName
        - contentType
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        prettyName:
          type: string
        contentType:
          type: string
        createdAt:
          type: string
          format: date-time
    AgreementsEService:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        version:
          type: string
        activeDescriptor:
          $ref: '#/components/schemas/CompactDescriptor'
      additionalProperties: false
      required:
        - id
        - name
        - version
    EServiceDescriptorState:
      type: string
      description: EService Descriptor State
      enum:
        - DRAFT
        - PUBLISHED
        - DEPRECATED
        - SUSPENDED
        - ARCHIVED
    EServiceTechnology:
      type: string
      description: EService Descriptor State
      enum:
        - REST
        - SOAP
    DescriptorAttributes:
      type: object
      properties:
        certified:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttribute'
        declared:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttribute'
        verified:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttribute'
      required:
        - certified
        - declared
        - verified
    DescriptorAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - name
        - description
        - explicitAttributeVerification
    DescriptorAttributesSeed:
      type: object
      properties:
        certified:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttributeSeed'
        declared:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttributeSeed'
        verified:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/DescriptorAttributeSeed'
      additionalProperties: false
      required:
        - certified
        - declared
        - verified
    DescriptorAttributeSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    CertifiedAttributeSeed:
      title: AttributeSeed
      type: object
      description: Models the attribute registry entry as payload response
      properties:
        description:
          type: string
        name:
          type: string
        code:
          type: string
        origin:
          type: string
      required:
        - description
        - name
        - code
    AttributeSeed:
      title: AttributeSeed
      type: object
      description: Models the attribute registry entry as payload response
      properties:
        description:
          type: string
        name:
          type: string
      required:
        - description
        - name
    Attribute:
      title: Attribute
      type: object
      description: Models the attribute registry entry as payload response
      properties:
        id:
          type: string
          format: uuid
          description: uniquely identifies the attribute on the registry
        code:
          type: string
          description: identifies the unique code of this attribute on the origin registry
        kind:
          description: Kind of the attribute. It's one of CERTIFIED, VERIFIED, DECLARED.
          $ref: '#/components/schemas/AttributeKind'
        description:
          type: string
        origin:
          type: string
          description: 'represents the origin of this attribute (e.g.: IPA, Normattiva, etc.)'
        name:
          type: string
        creationTime:
          type: string
          format: date-time
      required:
        - id
        - description
        - kind
        - name
        - creationTime
    VerifiedAttribute:
      title: VerifiedAttribute
      type: object
      description: represents the details of a verified attribute bound to the agreement.
      properties:
        id:
          type: string
          format: uuid
          description: uniquely identifies the attribute on the registry
        description:
          type: string
        name:
          type: string
        creationTime:
          type: string
          format: date-time
      required:
        - id
        - description
        - name
        - creationTime
    DeclaredAttribute:
      title: DeclaredAttribute
      type: object
      description: represents the details of a declared attribute bound to the agreement.
      properties:
        id:
          type: string
          format: uuid
          description: uniquely identifies the attribute on the registry
        description:
          type: string
        name:
          type: string
        creationTime:
          type: string
          format: date-time
      required:
        - id
        - description
        - name
        - creationTime
    CertifiedAttribute:
      title: CertifiedAttribute
      type: object
      description: Models a certified attribute registry entry as payload response
      properties:
        id:
          type: string
          format: uuid
          description: uniquely identifies the attribute on the registry
        description:
          type: string
        name:
          type: string
        creationTime:
          type: string
          format: date-time
      required:
        - id
        - description
        - name
        - creationTime
    CertifiedAttributesResponse:
      title: CertifiedAttributesResponse
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/CertifiedTenantAttribute'
      required:
        - attributes
    DeclaredAttributesResponse:
      title: DeclaredAttributesResponse
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/DeclaredTenantAttribute'
      required:
        - attributes
    VerifiedAttributesResponse:
      title: VerifiedAttributesResponse
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedTenantAttribute'
      required:
        - attributes
    AttributeKind:
      type: string
      enum:
        - CERTIFIED
        - DECLARED
        - VERIFIED
    Attributes:
      title: Attributes
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompactAttribute'
      required:
        - results
        - pagination
    ExternalId:
      properties:
        origin:
          type: string
        value:
          type: string
      required:
        - origin
        - value
    MailKind:
      type: string
      enum:
        - CONTACT_EMAIL
        - DIGITAL_ADDRESS
    MailSeed:
      description: A specific kind of mail
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/MailKind'
        address:
          type: string
        description:
          type: string
      required:
        - kind
        - address    
    Tenants:
      title: Tenants
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompactTenant'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    TenantFeature:
      type: object
      properties:
        certifier:
          $ref: '#/components/schemas/Certifier'
    Certifier:
      description: Certifier Tenant Feature
      type: object
      properties:
        certifierId:
          type: string
      required:
        - certifierId
    CompactTenant:
      properties:
        id:
          type: string
          format: uuid
        selfcareId:
          type: string
        name:
          type: string
        logoUrl:
          type: string
      required:
        - id
        - name
    Tenant:
      properties:
        id:
          type: string
          format: uuid
        selfcareId:
          type: string
          format: uuid
        externalId:
          $ref: '#/components/schemas/ExternalId'
        features:
          type: array
          items:
            $ref: '#/components/schemas/TenantFeature'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        attributes:
          $ref: '#/components/schemas/TenantAttributes'
        contactMail:
          $ref: '#/components/schemas/Mail'
        onboardedAt:
          type: string
          format: date-time
        subUnitType:
          $ref: '#/components/schemas/TenantUnitType'      
      required:
        - id
        - externalId
        - features
        - name
        - attributes
        - createdAt
    TenantUnitType:
      type: string
      enum:
        - AOO
        - UO
    TenantAttributes:
      type: object
      properties:
        declared:
          type: array
          items:
            $ref: '#/components/schemas/DeclaredTenantAttribute'
        certified:
          type: array
          items:
            $ref: '#/components/schemas/CertifiedTenantAttribute'
        verified:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedTenantAttribute'
      required:
        - declared
        - certified
        - verified
    DeclaredTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        assignmentTimestamp:
          type: string
          format: date-time
        revocationTimestamp:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - assignmentTimestamp
    DeclaredTenantAttributeSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateVerifiedTenantAttributeSeed:
      type: object
      properties:
        expirationDate:
          type: string
          format: date-time
    VerifiedTenantAttributeSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        expirationDate:
          type: string
          format: date-time
      required:
        - id
    CertifiedTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        assignmentTimestamp:
          type: string
          format: date-time
        revocationTimestamp:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - assignmentTimestamp
    VerifiedTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        assignmentTimestamp:
          type: string
          format: date-time
        verifiedBy:
          type: array
          items:
            $ref: '#/components/schemas/TenantVerifier'
        revokedBy:
          type: array
          items:
            $ref: '#/components/schemas/TenantRevoker'
      required:
        - id
        - name
        - description
        - assignmentTimestamp
        - verifiedBy
        - revokedBy
    TenantVerifier:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verificationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        extensionDate:
          type: string
          format: date-time
      required:
        - id
        - verificationDate
    TenantRevoker:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verificationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        extensionDate:
          type: string
          format: date-time
        revocationDate:
          type: string
          format: date-time
      required:
        - id
        - verificationDate
        - revocationDate
    TokenGenerationValidationResult:
      type: object
      properties:
        clientKind:
          $ref: '#/components/schemas/ClientKind'
        steps:
          $ref: '#/components/schemas/TokenGenerationValidationSteps'
        eservice:
          $ref: '#/components/schemas/TokenGenerationValidationEService'
      required:
        - steps
    TokenGenerationValidationSteps:
      type: object
      properties:
        clientAssertionValidation:
          $ref: '#/components/schemas/TokenGenerationValidationEntry'
        publicKeyRetrieve:
          $ref: '#/components/schemas/TokenGenerationValidationEntry'
        clientAssertionSignatureVerification:
          $ref: '#/components/schemas/TokenGenerationValidationEntry'
        platformStatesVerification:
          $ref: '#/components/schemas/TokenGenerationValidationEntry'
      required:
        - clientAssertionValidation
        - publicKeyRetrieve
        - clientAssertionSignatureVerification
        - platformStatesVerification
    TokenGenerationValidationEntry:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TokenGenerationValidationStepResult'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/TokenGenerationValidationStepFailure'
      required:
        - result
        - failures
    TokenGenerationValidationStepResult:
      type: string
      description: Token Generation Validation Step RESULT
      enum:
        - PASSED
        - SKIPPED
        - FAILED
    TokenGenerationValidationStepFailure:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
      required:
        - code
        - reason
    TokenGenerationValidationEService:
      type: object
      properties:
        id:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
        version:
          type: string
        name:
          type: string
      required:
        - id
        - descriptorId
        - version
        - name
    PublicKey:
      type: object
      properties:
        keyId:
          type: string
        name:
          type: string
        user:
          $ref: '#/components/schemas/CompactUser'
        createdAt:
          type: string
          format: date-time
        isOrphan:
          type: boolean      
      required:
        - keyId
        - name
        - createdAt
        - user
        - isOrphan
    CompactUser:
      description: Contains some details about user
      type: object
      properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
        familyName:
          type: string
      required:
        - userId
        - name
        - familyName    
    PublicKeys:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/PublicKey'
      required:
        - keys    
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        correlationId:
          description: Unique identifier of the request
          example: '53af4f2d-0c87-41ef-a645-b726a821852b'
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT